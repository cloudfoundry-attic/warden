require "rspec/core/rake_task"
require "rspec/core/version"
require "vcap/common"
require "yaml"

desc "Run all examples"
RSpec::Core::RakeTask.new(:spec) do |t|
  t.rspec_opts = %w[--color --format documentation]
end

desc "Run (or re-run) steps to setup warden"
task :setup, :config_path do |t, args|

  rootfs_dir = nil
  error_msg = nil

  if args[:config_path]
    config = YAML.load_file(args["config_path"])
    if config["server"] && config["server"]["container_rootfs_path"]
      rootfs_dir = config["server"]["container_rootfs_path"]
    else
      error_msg = "ERROR! Config file: #{args["config_path"]} doesn't contain "
      error_msg << "the key: server -> container_rootfs_path."
    end
  else
    error_msg = "ERROR! No config file provided."
  end

  if error_msg
    STDERR.puts(error_msg)
    Process.exit(1)
  end

  Dir.chdir("src") do
    sh "make clean all"
  end

  sh "cp src/clone/clone root/linux/skeleton/bin"

  ["linux", "insecure"].each do |ct|
    sh "cp src/iomux/iomux-spawn root/#{ct}/skeleton/bin"
    sh "cp src/iomux/iomux-link root/#{ct}/skeleton/bin"
  end

  sh "sudo -E root/linux/base/setup.sh #{rootfs_dir}"
end

namespace :warden do
  desc "Run Warden server"
  task :start, :config_path do |t, args|
    require "warden/server"

    if args[:config_path]
      config = YAML.load_file(args["config_path"])
      if config["server"] && config["server"]["container_klass"]
        klass = config["server"]["container_klass"]
        config["server"]["container_klass"] = klass.split("::").inject(Kernel) do |prev, cur|
          prev.const_get(cur)
        end
      end
    else
      config = {:logging => {:level => :debug2}}
    end

    Warden::Server.setup(config)
    Warden::Server.run!
  end
end
